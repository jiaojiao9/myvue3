import type { TableV2ColumnResizerProps } from './column-resizer';
declare const ColumnResizer: import("vue").DefineComponent<{
    readonly column: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("./common").AnyColumn>, unknown, true, unknown, unknown>;
    readonly onResize: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn, width: number) => void>, unknown, unknown, unknown, unknown>;
    readonly onResizeStart: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn) => void>, unknown, unknown, unknown, unknown>;
    readonly onResizeStop: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn) => void>, unknown, unknown, unknown, unknown>;
    readonly minWidth: import("../../../utils").BuildPropReturn<NumberConstructor, 30, unknown, unknown, unknown>;
    readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly column: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("./common").AnyColumn>, unknown, true, unknown, unknown>;
    readonly onResize: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn, width: number) => void>, unknown, unknown, unknown, unknown>;
    readonly onResizeStart: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn) => void>, unknown, unknown, unknown, unknown>;
    readonly onResizeStop: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(column: import("./common").AnyColumn) => void>, unknown, unknown, unknown, unknown>;
    readonly minWidth: import("../../../utils").BuildPropReturn<NumberConstructor, 30, unknown, unknown, unknown>;
    readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
}>>, {
    style: import("vue").CSSProperties;
    minWidth: number;
    onResize: (column: import("./common").AnyColumn, width: number) => void;
    onResizeStart: (column: import("./common").AnyColumn) => void;
    onResizeStop: (column: import("./common").AnyColumn) => void;
}>;
declare function useColumnResizer(props: TableV2ColumnResizerProps): {
    resizerRef: import("vue").Ref<HTMLElement | undefined>;
    onClick: (event: Event, ...args: unknown[]) => any;
    onMousedown: (e: MouseEvent) => void;
    onTouchStart: (e: TouchEvent) => void;
    onDragEnd: () => void;
};
export default ColumnResizer;
export { useColumnResizer };
